// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.gailo22.web;

import com.gailo22.domain.Booking;
import com.gailo22.domain.Flight;
import com.gailo22.domain.FlightDescription;
import com.gailo22.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Booking, String> ApplicationConversionServiceFactoryBean.getBookingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.gailo22.domain.Booking, java.lang.String>() {
            public String convert(Booking booking) {
                return new StringBuilder().append(booking.getName()).append(' ').append(booking.getEmail()).toString();
            }
        };
    }
    
    public Converter<Long, Booking> ApplicationConversionServiceFactoryBean.getIdToBookingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.gailo22.domain.Booking>() {
            public com.gailo22.domain.Booking convert(java.lang.Long id) {
                return Booking.findBooking(id);
            }
        };
    }
    
    public Converter<String, Booking> ApplicationConversionServiceFactoryBean.getStringToBookingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.gailo22.domain.Booking>() {
            public com.gailo22.domain.Booking convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Booking.class);
            }
        };
    }
    
    public Converter<Flight, String> ApplicationConversionServiceFactoryBean.getFlightToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.gailo22.domain.Flight, java.lang.String>() {
            public String convert(Flight flight) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Flight> ApplicationConversionServiceFactoryBean.getIdToFlightConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.gailo22.domain.Flight>() {
            public com.gailo22.domain.Flight convert(java.lang.Long id) {
                return Flight.findFlight(id);
            }
        };
    }
    
    public Converter<String, Flight> ApplicationConversionServiceFactoryBean.getStringToFlightConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.gailo22.domain.Flight>() {
            public com.gailo22.domain.Flight convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Flight.class);
            }
        };
    }
    
    public Converter<FlightDescription, String> ApplicationConversionServiceFactoryBean.getFlightDescriptionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.gailo22.domain.FlightDescription, java.lang.String>() {
            public String convert(FlightDescription flightDescription) {
                return new StringBuilder().append(flightDescription.getOriginCity()).append(' ').append(flightDescription.getDestinationCity()).append(' ').append(flightDescription.getPrice()).toString();
            }
        };
    }
    
    public Converter<Long, FlightDescription> ApplicationConversionServiceFactoryBean.getIdToFlightDescriptionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.gailo22.domain.FlightDescription>() {
            public com.gailo22.domain.FlightDescription convert(java.lang.Long id) {
                return FlightDescription.findFlightDescription(id);
            }
        };
    }
    
    public Converter<String, FlightDescription> ApplicationConversionServiceFactoryBean.getStringToFlightDescriptionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.gailo22.domain.FlightDescription>() {
            public com.gailo22.domain.FlightDescription convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), FlightDescription.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getBookingToStringConverter());
        registry.addConverter(getIdToBookingConverter());
        registry.addConverter(getStringToBookingConverter());
        registry.addConverter(getFlightToStringConverter());
        registry.addConverter(getIdToFlightConverter());
        registry.addConverter(getStringToFlightConverter());
        registry.addConverter(getFlightDescriptionToStringConverter());
        registry.addConverter(getIdToFlightDescriptionConverter());
        registry.addConverter(getStringToFlightDescriptionConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
